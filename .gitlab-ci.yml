stages:
  - static-analysis
  - unittest
  - integration-test

static-analysis:
  stage: static-analysis
  image: mleiner/kolt-base:0.2
  script:
    - pip3 install flake8 pylint pylint-exit
    - make lint


unittest:
  stage: unittest
  image: mleiner/kolt-base:0.2
  script:
    - pip3 install -e .
    - make coverage PY=python3


integration-test:
  stage: integration-test
  image: mleiner/kolt-base:0.2
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "source ./openstack-lb-var.sh"
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - "mkdir  koris-install  && cd koris-install && python3 -m venv koris-env"
  - "source ./koris-env/bin/activate"
  - "cd -"
  - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && mv kubectl /usr/local/bin/kubectl  && chmod  777  /usr/local/bin/kubectl"
  - sed -i "s/%%date%%/$(date '+%Y-%m-%d')/g" tests/koris_test.yml
  - kolt k8s tests/koris_test.yml
  - echo $KUBECONFIG
  - kubectl get nodes  || kolt destroy tests/koris_test.yml --force
  - kubectl -n kube-system patch deployment nginx -p $OS_LAB
  - kubectl run nginx --image=nginx --port=80 || kolt destroy tests/koris_test.yml --force
  - kubectl expose deployment nginx --type=LoadBalancer --name=nginx || kolt destroy tests/koris_test.yml --force
  - sleep 90
  - kubectl get services || kolt destroy tests/koris_test.yml --force
  - curl  http://$(kubectl describe svc nginx | grep IP | cut  -d":" -f2 | tr -d " ")
  - kolt destroy tests/koris_test.yml --force
