stages:
 - static-analysis
 - unittest
 - integration-test
 - cleanup
 - pages

static-analysis:
  stage: static-analysis
  image: oz123/koris-alpine:0.1.1
  script:
    - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev
    - pip3 install -U pip
    - pip3 install flake8 pylint pylint-exit
    - make lint

unittest:
  stage: unittest
  image: oz123/koris-alpine:0.1.1
  script:
    - apk add --update py3-cryptography python3-dev libffi-dev
    - pip3 install -U pip
    - pip3 install -e .
    - make coverage PY=python3

integration-test:
  stage: integration-test
  image: oz123/koris-alpine:0.1.1
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - make launch-cluster
  - kubectl get nodes
  - make integration-run
  - make integration-wait
  - make integration-patch-wait
  - make integration-expose
  - make integration-wait
  - make curl-run
  - make clean-lb

cleanup:
  stage: cleanup
  image: oz123/koris-alpine:0.1.1
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - make clean-after-integration-test
  when: always

pages:
  stage: pages
  image: oz123/koris-alpine:0.1.1
  script:
  - pip3 install sphinx sphinx_rtd_theme sphinx_autobuild
  - which sphinx-build
  - make -C docs html
  - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
  - master
