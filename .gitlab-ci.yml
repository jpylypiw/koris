stages:
 - static-analysis
 - unittest
 - wait-for-resources
 - build-cluster
 - integration-test
 - security-checks
 - compliance-checks
 - cleanup
 - pages
 - build

static-analysis-python:
  stage: static-analysis
  image: oz123/koris-alpine:0.1.4
  script:
    - make lint

static-analysis-bash:
  stage: static-analysis
  image: oz123/koris-alpine:0.1.4
  script:
    - make test-bash

unittest:
  stage: unittest
  image: oz123/koris-alpine:0.1.4
  script:
    - pip3 install -q -e .
    - make coverage PY=python3

wait-for-resources:
  stage: wait-for-resources
  image: oz123/koris-alpine:0.1.4
  script:
   - pip3 install -q -e .
   - python3 tests/scripts/wait_for_pipeline.py
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

bare-metal-build:
  stage: build-cluster
  image: oz123/koris-alpine:0.1.4
  script:
   - apk add openssh
   - pip install python-openstackclient python-octaviaclient
   - mkdir .ssh; echo $SSH_PRIVATE_KEY_B64 | base64 -d > .ssh/id_rsa; cat .ssh/id_rsa;
   - chmod 0600 .ssh/id_rsa; eval $(ssh-agent); ssh-add .ssh/id_rsa
   - make -f tests/makefile-bare-metal.mk build-cluster-bare-metal USER=centos CLUSTERNAME=bare-metal-${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

bare-metal-integration:
  stage: integration-test
  image: oz123/koris-alpine:0.1.4
  script:
   - apk add openssh
   - pip install python-openstackclient python-octaviaclient
   - mkdir .ssh; echo $SSH_PRIVATE_KEY_B64 | base64 -d > .ssh/id_rsa; cat .ssh/id_rsa;
   - chmod 0600 .ssh/id_rsa; eval $(ssh-agent); ssh-add .ssh/id_rsa
   - make -f tests/makefile-bare-metal.mk integration-test-bare-metal USER=centos CLUSTERNAME=bare-metal-${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

build-cluster:
  stage: build-cluster
  image: oz123/koris-alpine:0.1.4
  script:
  - "pip3 install -q -e ."
  - make launch-cluster
  - make show-nodes
  artifacts:
    paths:
      - "certs-*"
      - "*-admin.conf"
      - "tests/koris_test.yml"
    expire_in: 1 week
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

add-nodes:
  stage: integration-test
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make add-nodes"
  - "make assert-node-labels NUM=4"
  - "make assert-node-labels NUM=5"
  artifacts:
    paths:
      - "tests/koris_test.updated.yml"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

add-master:
  stage: integration-test
  image: oz123/koris-alpine:0.1.5
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make add-master"
  - "make assert-members NUM=4"
  - "make assert-masters NUM=4"
  - "make assert-control-plane NUM=4"
  - "make coverage"
  - "make rename-coverage NAME=\"add-master\""
  artifacts:
    paths:
      - "tests/koris_test.master.yml"
      - ".coverage.add-master"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

check-dns:
  stage: integration-test
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install -q -e ."
  - "make check-cluster-dns"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

integration-test:
  stage: integration-test
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make integration-run"
  - "make integration-wait"
  - "make integration-patch-wait"
  - "make integration-expose"
  - "make expose-wait"
  - "make curl-run"
  - "make clean-lb-after-integration-test"
  artifacts:
    paths:
      - "certs-*"
      - "*-admin.conf"
      - "tests/koris_test.yml"
    expire_in: 1 week
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

check-node-labels:
  stage: integration-test
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make assert-node-labels"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

check-members:
  stage: integration-test
  image: oz123/koris-alpine:0.1.5
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make assert-members NUM=3"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

assert-control-plane:
  stage: integration-test
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make assert-masters NUM=3"
  - "make assert-control-plane NUM=3"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-integration-test/
      - $SKIP_E2E

security-checks-masters:
  stage: security-checks
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - "pip3 install -q -e ."
  - "make security-checks-masters"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

security-checks-nodes:
  stage: security-checks
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - "make security-checks-nodes"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

compliance-checks:
  stage: compliance-checks
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install -q -e ."
  - "make compliance-checks"
  only:
  - master
  - tags
  - compliance_check
  artifacts:
    paths:
      - results
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

cleanup:
  stage: cleanup
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add make
  - "pip3 install -q -e ."
  - make clean-all
  when: always
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

clean-bare-metal:
  stage: cleanup
  image: oz123/koris-alpine:0.1.4
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
   - pip install python-openstackclient python-octaviaclient
   - make -f tests/makefile-bare-metal.mk clean-all CLUSTERNAME=bare-metal-${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
  when: always
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-end-to-end-tests/
      - $SKIP_E2E

dev-docs:
  stage: pages
  image: oz123/koris-alpine:0.1.4
  script:
  - pip3 install sphinx sphinx_rtd_theme sphinx_autobuild
  - pip3 install .
  - which sphinx-build
  - pip3 install .
  - make -C docs html
  - ls docs
  - mkdir -pv public/dev
  - ls docs/_build
  - mv docs/_build/html/ public/dev/
  artifacts:
    paths:
    - public
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev"

pages:
  stage: pages
  image: oz123/koris-alpine:0.1.4
  script:
  - pip3 install sphinx sphinx_rtd_theme sphinx_autobuild
  - which sphinx-build
  - pip3 install .
  - make -C docs html
  - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
    - tags
    - master

build:
  stage: build
  image: oz123/koris-builder:0.2
  script:
   - make install build-exec
   - python3 setup.py sdist
  artifacts:
    paths:
     - dist/koris-*.tar.gz
     - dist/koris
  only:
    - tags
    - master
    - dev
