stages:
 - static-analysis
 - unittest
 - wait-for-resources
 - build-cluster
 - integration-test
 - security-checks
 - cleanup
 - pages

static-analysis:
  stage: static-analysis
  image: oz123/koris-alpine:0.1.1
  script:
    - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev
    - pip3 install -U pip
    - pip3 install flake8 pylint pylint-exit
    - make lint

unittest:
  stage: unittest
  image: oz123/koris-alpine:0.1.1
  script:
    - apk add --update py3-cryptography python3-dev libffi-dev
    - pip3 install -U pip
    - pip3 install -e .
    - make coverage PY=python3

wait-for-resources:
  stage: wait-for-resources
  image: oz123/koris-alpine:0.1.1
  script:
   - pip3 install python-gitlab
   - pip3 install -e .
   - python3 tests/scripts/wait_for_pipeline.py

build-cluster:
  stage: build-cluster
  image: oz123/koris-alpine:0.1.1
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - make launch-cluster
  - ls -l
  - make show-nodes
  artifacts:
    paths:
      - "certs-koris-pipe-line-*"
      - "koris-pipe-line-*-admin.conf"
      - "tests/koris_test.yml"
    expire_in: 1 week

integration-test:
  stage: integration-test
  image: oz123/koris-alpine:0.1.1
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - "make integration-run"
  - "make integration-wait"
  - "make integration-patch-wait"
  - "make integration-expose"
  - "make expose-wait"
  - "make curl-run"
  - "make clean-lb-after-integration-test"
  artifacts:
    paths:
      - "certs-koris-pipe-line-*"
      - "koris-pipe-line-*-admin.conf"
      - "tests/koris_test.yml"
    expire_in: 1 week

security-checks:
  stage: security-checks
  image: oz123/koris-alpine:0.1.1
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add --update py3-cryptography python3-dev libffi-dev libressl-dev make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - "make security-checks"
  artifacts:
    paths:
      - "certs-koris-pipe-line-*"
      - "koris-pipe-line-*-admin.conf"
      - "tests/koris_test.yml"
    expire_in: 1 week

cleanup:
  stage: cleanup
  image: oz123/koris-alpine:0.1.1
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  script:
  - apk add make
  - "pip3 install  -r requirements.txt"
  - "pip3 install -e ."
  - make reset-config
  - make upadte-config
  - make clean-all
  when: always

dev-docs:
  stage: pages
  image: oz123/koris-alpine:0.1.1
  script:
  - pip3 install sphinx sphinx_rtd_theme sphinx_autobuild
  - which sphinx-build
  - git checkout master
  - make -C docs html
  - mv docs/_build/html/ public/
  - git checkout $CI_COMMIT_REF_NAME
  - git pull origin
  - make -C docs html
  - mv docs/_build/html/ public/dev/
  artifacts:
    paths:
    - public
  only:
    variables:
      - $CI_COMMIT_REF_NAME == "dev"

pages:
  stage: pages
  image: oz123/koris-alpine:0.1.1
  script:
  - pip3 install sphinx sphinx_rtd_theme sphinx_autobuild
  - which sphinx-build
  - make -C docs html
  - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
    - tags
    - triggers
    - master
