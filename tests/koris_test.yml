# Use this file to configure the type of machines you want to create
# on OpenStack
---
master_flavor: 'ECS.GP1.2-8'
node_flavor: 'ECS.C1.4-8'
# If your project has multiple networks you MUST specify the subnetwork too
# don't change this unless you know what you are doing
# per default koris will create a network for your cluster and route
# this network to ext02 network in openstack if this is undesired change this
private_net:
 name: 'korispipeline-office-net'
 subnet:
  name: 'sub-korispipeline-office-net'
  cidr: '10.36.18.0/27'
#  This is optional - if no router name is given a new one will be created
  router:
   name: 'kubepipeline-office-rt'
   network: 'bgp-noris'
cluster-name: '%%CLUSTER_NAME%%'
availibility-zones:
 - de-nbg6-1b
 - de-nbg6-1a
n-masters: 3
n-nodes: 3
keypair: 'kube'
#security_group: 'default'
user_data: 'cloud-init-parts/generic'
# while any generic *ubuntu* image will work
# you should currently use koris-base
# this image includes all k8s binaries and a special kernel
# optimized for KVM (this image is built from
# ubuntu-16.04-minimal-cloudimg-amd64-disk1.img
image: "koris-%%date%%"
#image: "Ubuntu Xenial Server Cloudimg"
loadbalancer:
# set this to true if you
# want the load balancer to have a floating IP, you can also specify the IP
 floatingip: false
certificates:
  expriry: 8760h
#storage_class: "BSS-Performance-Storage"
storage_class: "PI-Storage-Class"
pod_subnet: "10.233.0.0/16"
pod_network: "CALICO"
#pod_subnet: "10.244.0.0/16"
#pod_network: "FLANNEL"

addons:
  dex:
    username_claim: email
    groups_claim: groups
    ports:
      listener: 32000
      service: 32000
    client:
      id: example-app
      ports:
        listener: 5555
        service: 32555
